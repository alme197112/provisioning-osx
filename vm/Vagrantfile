# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.provider "virtualbox" do |v|
    ## See http://docs.vagrantup.com/v2/virtualbox/configuration.html
    # v.gui = false
    ## VBoxManage customizations
    v.memory = 512
  end

  config.vm.box = "ubuntu/trusty64"

  ## Xen
  config.vm.provision :shell, privileged: true,
                      path: "bootstrap_xen.sh", args: "network"
  config.vm.provision :shell, privileged: true,
                      path: "bootstrap_xen.sh", args: "root"
  config.vm.provision :shell, privileged: false,
                      path: "bootstrap_xen.sh", args: "vagrant"
  ## Erlang/OTP - HACK optional optimization
  # config.vm.provision :shell, privileged: false,
  #                     inline: "mkdir -p /home/vagrant/.kerl/archives"
  # config.vm.provision :file,
  #                     source: "~/.kerl/archives/otp_src_17.4.tar.gz", destination: "/home/vagrant/.kerl/archives/otp_src_17.4.tar.gz"
  ## Erlang/OTP
  config.vm.provision :shell, privileged: true,
                      path: "bootstrap_otp.sh", args: "root"
  config.vm.provision :shell, privileged: false,
                      path: "bootstrap_otp.sh", args: "vagrant"
  ## LING
  # config.vm.provision "ling", type: :shell, privileged: false,
  #                     path: "bootstrap_ling.sh", args: "vagrant"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a private network, which allows host-only access to the machine
  # using a specific IP...
  # config.vm.network "private_network", ip: "192.168.33.10", auto_config: true
  # ... or DHCP.
  # config.vm.network "private_network", type: "dhcp", auto_config: true

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Disable the default share.
  config.vm.synced_folder ".", "/vagrant", disabled: true

  # If true, then any SSH connections made will enable agent forwarding.
  # Default value: false
  # config.ssh.forward_agent = true
end
